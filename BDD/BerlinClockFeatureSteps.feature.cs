// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:1.9.0.77
//      SpecFlow Generator Version:1.9.0.0
//      Runtime Version:4.0.30319.35312
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace BerlinClock.BDD
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.9.0.77")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute()]
    public partial class TheBerlinClockFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "BerlinClockFeatureSteps.feature"
#line hidden
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassInitializeAttribute()]
        public static void FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext testContext)
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "The Berlin Clock", "As a clock enthusiast\r\n  I want to tell the time using the Berlin Clock\r\n  So tha" +
                    "t I can increase the number of ways that I can read the time", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassCleanupAttribute()]
        public static void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestInitializeAttribute()]
        public virtual void TestInitialize()
        {
            if (((TechTalk.SpecFlow.FeatureContext.Current != null) 
                        && (TechTalk.SpecFlow.FeatureContext.Current.FeatureInfo.Title != "The Berlin Clock")))
            {
                BerlinClock.BDD.TheBerlinClockFeature.FeatureSetup(null);
            }
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCleanupAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void TopYellowLampBlinksEvery2Seconds(string time, string converted_Time, string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Top Yellow Lamp Blinks Every 2 seconds", exampleTags);
#line 8
this.ScenarioSetup(scenarioInfo);
#line 9
testRunner.When(string.Format("the time is {0}", time), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 10
testRunner.Then(string.Format("the clock should look like {0}", converted_Time), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Top Yellow Lamp Blinks Every 2 seconds")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "The Berlin Clock")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "\"00:00:00\"")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:time", "\"00:00:00\"")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:converted_time", "\"Y OOOO OOOO OOOOOOOOOOO OOOO\"")]
        public virtual void TopYellowLampBlinksEvery2Seconds_000000()
        {
            this.TopYellowLampBlinksEvery2Seconds("\"00:00:00\"", "\"Y OOOO OOOO OOOOOOOOOOO OOOO\"", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Top Yellow Lamp Blinks Every 2 seconds")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "The Berlin Clock")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "\"00:00:01\"")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:time", "\"00:00:01\"")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:converted_time", "\"O OOOO OOOO OOOOOOOOOOO OOOO\"")]
        public virtual void TopYellowLampBlinksEvery2Seconds_000001()
        {
            this.TopYellowLampBlinksEvery2Seconds("\"00:00:01\"", "\"O OOOO OOOO OOOOOOOOOOO OOOO\"", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Top Yellow Lamp Blinks Every 2 seconds")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "The Berlin Clock")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "\"00:00:59\"")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:time", "\"00:00:59\"")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:converted_time", "\"O OOOO OOOO OOOOOOOOOOO OOOO\"")]
        public virtual void TopYellowLampBlinksEvery2Seconds_000059()
        {
            this.TopYellowLampBlinksEvery2Seconds("\"00:00:59\"", "\"O OOOO OOOO OOOOOOOOOOO OOOO\"", ((string[])(null)));
        }
        
        public virtual void TopRowHoursLampLightsRedEvery5Hours(string time, string converted_Time, string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Top Row Hours Lamp Lights Red Every 5 Hours", exampleTags);
#line 18
this.ScenarioSetup(scenarioInfo);
#line 19
testRunner.When(string.Format("the time is {0}", time), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 20
testRunner.Then(string.Format("the clock should look like {0}", converted_Time), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Top Row Hours Lamp Lights Red Every 5 Hours")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "The Berlin Clock")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "\"05:00:00\"")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:time", "\"05:00:00\"")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:converted_time", "\"Y ROOO OOOO OOOOOOOOOOO OOOO\"")]
        public virtual void TopRowHoursLampLightsRedEvery5Hours_050000()
        {
            this.TopRowHoursLampLightsRedEvery5Hours("\"05:00:00\"", "\"Y ROOO OOOO OOOOOOOOOOO OOOO\"", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Top Row Hours Lamp Lights Red Every 5 Hours")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "The Berlin Clock")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "\"10:00:00\"")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:time", "\"10:00:00\"")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:converted_time", "\"Y RROO OOOO OOOOOOOOOOO OOOO\"")]
        public virtual void TopRowHoursLampLightsRedEvery5Hours_100000()
        {
            this.TopRowHoursLampLightsRedEvery5Hours("\"10:00:00\"", "\"Y RROO OOOO OOOOOOOOOOO OOOO\"", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Top Row Hours Lamp Lights Red Every 5 Hours")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "The Berlin Clock")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "\"15:00:00\"")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:time", "\"15:00:00\"")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:converted_time", "\"Y RRRO OOOO OOOOOOOOOOO OOOO\"")]
        public virtual void TopRowHoursLampLightsRedEvery5Hours_150000()
        {
            this.TopRowHoursLampLightsRedEvery5Hours("\"15:00:00\"", "\"Y RRRO OOOO OOOOOOOOOOO OOOO\"", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Top Row Hours Lamp Lights Red Every 5 Hours")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "The Berlin Clock")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "\"20:00:00\"")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:time", "\"20:00:00\"")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:converted_time", "\"Y RRRR OOOO OOOOOOOOOOO OOOO\"")]
        public virtual void TopRowHoursLampLightsRedEvery5Hours_200000()
        {
            this.TopRowHoursLampLightsRedEvery5Hours("\"20:00:00\"", "\"Y RRRR OOOO OOOOOOOOOOO OOOO\"", ((string[])(null)));
        }
        
        public virtual void BotomRowHoursLampLightsRedEveryHour(string time, string converted_Time, string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Botom Row Hours Lamp Lights Red Every Hour", exampleTags);
#line 29
this.ScenarioSetup(scenarioInfo);
#line 30
testRunner.When(string.Format("the time is {0}", time), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 31
testRunner.Then(string.Format("the clock should look like {0}", converted_Time), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Botom Row Hours Lamp Lights Red Every Hour")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "The Berlin Clock")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "\"01:00:00\"")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:time", "\"01:00:00\"")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:converted_time", "\"Y OOOO ROOO OOOOOOOOOOO OOOO\"")]
        public virtual void BotomRowHoursLampLightsRedEveryHour_010000()
        {
            this.BotomRowHoursLampLightsRedEveryHour("\"01:00:00\"", "\"Y OOOO ROOO OOOOOOOOOOO OOOO\"", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Botom Row Hours Lamp Lights Red Every Hour")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "The Berlin Clock")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "\"02:00:00\"")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:time", "\"02:00:00\"")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:converted_time", "\"Y OOOO RROO OOOOOOOOOOO OOOO\"")]
        public virtual void BotomRowHoursLampLightsRedEveryHour_020000()
        {
            this.BotomRowHoursLampLightsRedEveryHour("\"02:00:00\"", "\"Y OOOO RROO OOOOOOOOOOO OOOO\"", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Botom Row Hours Lamp Lights Red Every Hour")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "The Berlin Clock")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "\"03:00:00\"")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:time", "\"03:00:00\"")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:converted_time", "\"Y OOOO RRRO OOOOOOOOOOO OOOO\"")]
        public virtual void BotomRowHoursLampLightsRedEveryHour_030000()
        {
            this.BotomRowHoursLampLightsRedEveryHour("\"03:00:00\"", "\"Y OOOO RRRO OOOOOOOOOOO OOOO\"", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Botom Row Hours Lamp Lights Red Every Hour")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "The Berlin Clock")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "\"04:00:00\"")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:time", "\"04:00:00\"")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:converted_time", "\"Y OOOO RRRR OOOOOOOOOOO OOOO\"")]
        public virtual void BotomRowHoursLampLightsRedEveryHour_040000()
        {
            this.BotomRowHoursLampLightsRedEveryHour("\"04:00:00\"", "\"Y OOOO RRRR OOOOOOOOOOO OOOO\"", ((string[])(null)));
        }
        
        public virtual void TopRowMinutesLampLightsRedEveryFirstQuarterHalfAndLastQuarterOfAnHour(string time, string converted_Time, string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Top Row Minutes Lamp Lights Red Every First Quarter, Half And Last Quarter Of An " +
                    "Hour", exampleTags);
#line 40
this.ScenarioSetup(scenarioInfo);
#line 41
testRunner.When(string.Format("the time is {0}", time), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 42
testRunner.Then(string.Format("the clock should look like {0}", converted_Time), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Top Row Minutes Lamp Lights Red Every First Quarter, Half And Last Quarter Of An " +
            "Hour")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "The Berlin Clock")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "\"00:15:00\"")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:time", "\"00:15:00\"")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:converted_time", "\"Y OOOO OOOO YYROOOOOOOO OOOO\"")]
        public virtual void TopRowMinutesLampLightsRedEveryFirstQuarterHalfAndLastQuarterOfAnHour_001500()
        {
            this.TopRowMinutesLampLightsRedEveryFirstQuarterHalfAndLastQuarterOfAnHour("\"00:15:00\"", "\"Y OOOO OOOO YYROOOOOOOO OOOO\"", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Top Row Minutes Lamp Lights Red Every First Quarter, Half And Last Quarter Of An " +
            "Hour")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "The Berlin Clock")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "\"00:30:00\"")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:time", "\"00:30:00\"")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:converted_time", "\"Y OOOO OOOO YYRYYROOOOO OOOO\"")]
        public virtual void TopRowMinutesLampLightsRedEveryFirstQuarterHalfAndLastQuarterOfAnHour_003000()
        {
            this.TopRowMinutesLampLightsRedEveryFirstQuarterHalfAndLastQuarterOfAnHour("\"00:30:00\"", "\"Y OOOO OOOO YYRYYROOOOO OOOO\"", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Top Row Minutes Lamp Lights Red Every First Quarter, Half And Last Quarter Of An " +
            "Hour")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "The Berlin Clock")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "\"00:45:00\"")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:time", "\"00:45:00\"")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:converted_time", "\"Y OOOO OOOO YYRYYRYYROO OOOO\"")]
        public virtual void TopRowMinutesLampLightsRedEveryFirstQuarterHalfAndLastQuarterOfAnHour_004500()
        {
            this.TopRowMinutesLampLightsRedEveryFirstQuarterHalfAndLastQuarterOfAnHour("\"00:45:00\"", "\"Y OOOO OOOO YYRYYRYYROO OOOO\"", ((string[])(null)));
        }
        
        public virtual void BottomRowMinutesLampLightsYellowEveryMinute(string time, string converted_Time, string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Bottom Row Minutes Lamp Lights Yellow Every Minute", exampleTags);
#line 50
this.ScenarioSetup(scenarioInfo);
#line 51
testRunner.When(string.Format("the time is {0}", time), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 52
testRunner.Then(string.Format("the clock should look like {0}", converted_Time), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Bottom Row Minutes Lamp Lights Yellow Every Minute")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "The Berlin Clock")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "\"00:01:00\"")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:time", "\"00:01:00\"")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:converted_time", "\"Y OOOO OOOO OOOOOOOOOOO YOOO\"")]
        public virtual void BottomRowMinutesLampLightsYellowEveryMinute_000100()
        {
            this.BottomRowMinutesLampLightsYellowEveryMinute("\"00:01:00\"", "\"Y OOOO OOOO OOOOOOOOOOO YOOO\"", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Bottom Row Minutes Lamp Lights Yellow Every Minute")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "The Berlin Clock")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "\"00:02:00\"")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:time", "\"00:02:00\"")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:converted_time", "\"Y OOOO OOOO OOOOOOOOOOO YYOO\"")]
        public virtual void BottomRowMinutesLampLightsYellowEveryMinute_000200()
        {
            this.BottomRowMinutesLampLightsYellowEveryMinute("\"00:02:00\"", "\"Y OOOO OOOO OOOOOOOOOOO YYOO\"", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Bottom Row Minutes Lamp Lights Yellow Every Minute")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "The Berlin Clock")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "\"00:03:00\"")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:time", "\"00:03:00\"")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:converted_time", "\"Y OOOO OOOO OOOOOOOOOOO YYYO\"")]
        public virtual void BottomRowMinutesLampLightsYellowEveryMinute_000300()
        {
            this.BottomRowMinutesLampLightsYellowEveryMinute("\"00:03:00\"", "\"Y OOOO OOOO OOOOOOOOOOO YYYO\"", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Bottom Row Minutes Lamp Lights Yellow Every Minute")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "The Berlin Clock")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "\"00:04:00\"")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:time", "\"00:04:00\"")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:converted_time", "\"Y OOOO OOOO OOOOOOOOOOO YYYY\"")]
        public virtual void BottomRowMinutesLampLightsYellowEveryMinute_000400()
        {
            this.BottomRowMinutesLampLightsYellowEveryMinute("\"00:04:00\"", "\"Y OOOO OOOO OOOOOOOOOOO YYYY\"", ((string[])(null)));
        }
        
        public virtual void CorrectAreLightUp(string time, string converted_Time, string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Correct are light up", exampleTags);
#line 61
this.ScenarioSetup(scenarioInfo);
#line 62
testRunner.When(string.Format("the time is {0}", time), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 63
testRunner.Then(string.Format("the clock should look like {0}", converted_Time), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Correct are light up")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "The Berlin Clock")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "\"07:22:02\"")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:time", "\"07:22:02\"")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:converted_time", "\"Y ROOO RROO YYRYOOOOOOO YYOO\"")]
        public virtual void CorrectAreLightUp_072202()
        {
            this.CorrectAreLightUp("\"07:22:02\"", "\"Y ROOO RROO YYRYOOOOOOO YYOO\"", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Correct are light up")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "The Berlin Clock")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "\"13:17:01\"")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:time", "\"13:17:01\"")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:converted_time", "\"O RROO RRRO YYROOOOOOOO YYOO\"")]
        public virtual void CorrectAreLightUp_131701()
        {
            this.CorrectAreLightUp("\"13:17:01\"", "\"O RROO RRRO YYROOOOOOOO YYOO\"", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Correct are light up")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "The Berlin Clock")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "\"23:59:59\"")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:time", "\"23:59:59\"")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:converted_time", "\"O RRRR RRRO YYRYYRYYRYY YYYY\"")]
        public virtual void CorrectAreLightUp_235959()
        {
            this.CorrectAreLightUp("\"23:59:59\"", "\"O RRRR RRRO YYRYYRYYRYY YYYY\"", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Correct are light up")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "The Berlin Clock")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "\"24:00:00\"")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:time", "\"24:00:00\"")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:converted_time", "\"Y RRRR RRRR OOOOOOOOOOO OOOO\"")]
        public virtual void CorrectAreLightUp_240000()
        {
            this.CorrectAreLightUp("\"24:00:00\"", "\"Y RRRR RRRR OOOOOOOOOOO OOOO\"", ((string[])(null)));
        }
        
        public virtual void IncorrectTimeFormat(string time, string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Incorrect time format", exampleTags);
#line 73
this.ScenarioSetup(scenarioInfo);
#line 74
testRunner.When(string.Format("the time is {0}", time), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 75
testRunner.Then("the user should see an error message \"BerlinClock input time could be 24:00:00 or" +
                    " HH:mm:ss. Please specify time in the correct format.\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Incorrect time format")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "The Berlin Clock")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "\"1:00:00\"")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:time", "\"1:00:00\"")]
        public virtual void IncorrectTimeFormat_10000()
        {
            this.IncorrectTimeFormat("\"1:00:00\"", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Incorrect time format")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "The Berlin Clock")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "\"01:2:00\"")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:time", "\"01:2:00\"")]
        public virtual void IncorrectTimeFormat_01200()
        {
            this.IncorrectTimeFormat("\"01:2:00\"", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Incorrect time format")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "The Berlin Clock")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "\"01:02:3\"")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:time", "\"01:02:3\"")]
        public virtual void IncorrectTimeFormat_01023()
        {
            this.IncorrectTimeFormat("\"01:02:3\"", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Incorrect time format")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "The Berlin Clock")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "\"1:2:3\"")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:time", "\"1:2:3\"")]
        public virtual void IncorrectTimeFormat_123()
        {
            this.IncorrectTimeFormat("\"1:2:3\"", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Incorrect time format")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "The Berlin Clock")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "\"24:00:01\"")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:time", "\"24:00:01\"")]
        public virtual void IncorrectTimeFormat_240001()
        {
            this.IncorrectTimeFormat("\"24:00:01\"", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Incorrect time format")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "The Berlin Clock")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "\"24:34:56\"")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:time", "\"24:34:56\"")]
        public virtual void IncorrectTimeFormat_243456()
        {
            this.IncorrectTimeFormat("\"24:34:56\"", ((string[])(null)));
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Incorrect time format")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "The Berlin Clock")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "\"24:59:59\"")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:time", "\"24:59:59\"")]
        public virtual void IncorrectTimeFormat_245959()
        {
            this.IncorrectTimeFormat("\"24:59:59\"", ((string[])(null)));
        }
    }
}
#pragma warning restore
#endregion
